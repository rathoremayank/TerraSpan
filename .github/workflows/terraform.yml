name: Terraform Dev Environment

on:
  push:
    branches:
      - main
      - cicd
  pull_request:
    branches:
      - main
      - cicd

env:
  TF_ROOT: environments/dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # AWS Credentials (example)
      - name: Configure AWS credentials
        if: env.cloud_provider == 'aws'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # GCP Credentials (example)
      - name: Authenticate to Google Cloud
        if: env.cloud_provider == 'gcp'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Azure Credentials (example)
      - name: Azure Login
        if: env.cloud_provider == 'azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Terraform Init
        run: terraform -chdir=$TF_ROOT init

      - name: Terraform Validate
        run: terraform -chdir=$TF_ROOT validate

      - name: Terraform Plan
        run: terraform -chdir=$TF_ROOT plan -out=tfplan.out

      # Manual approval before applying changes
      - name: Await Approval
        uses: fjogeleit/http-request-action@v1
        if: github.ref == 'refs/heads/main'
        with:
          url: 'https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ github.workflow }}/runs/${{ github.run_id }}/approve'
          method: 'POST'
        continue-on-error: true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'

        run: terraform -chdir=$TF_ROOT apply -auto-approve tfplan.out
